{"version":3,"sources":["pages/Home/LandingSection/Bee/bee.mp4","global/theme.ts","global/config.ts","utils/mediaQuery.ts","styledComponents/GlobalStyle.ts","pages/Home/LandingSection/styled.ts","pages/Home/LandingSection/Bee/styled.ts","pages/Home/LandingSection/Bee/index.tsx","pages/Home/LandingSection/index.tsx","global/blogger.ts","data/blogger/services.ts","pages/Home/PostSection/Post/Header/styled.ts","pages/Home/PostSection/Post/Header/index.tsx","pages/Home/PostSection/Post/styled.ts","pages/Home/PostSection/Post/index.tsx","pages/Home/PostSection/styled.ts","pages/Home/PostSection/index.tsx","utils/isScrollEnd.ts","pages/Home/index.tsx","utils/scroll.ts","containers/App.tsx","index.tsx"],"names":["module","exports","WHITE","BLACK","SUCCESS","WARNING","DANGER","DARK","GRAY_DARKER","GRAY_DARK","GRAY","GRAY_LIGHT","GRAY_LIGHTER","PRIMARY","PRIMARY_LIGHT","PRIMARY_DARK","SECONDARY","NEGATIVE","MINIMAL","SECTION","MODAL","ABOVE_MODAL","NAVBAR","offset","breakpoints","desktop","mobile","keys","Object","values","mediaQuery","direction","reduce","prev","cur","index","mqMax","createGlobalStyle","normalize","theme","centeredAbsolute","css","Hero","styled","section","ContentWrapper","div","Content","Logo","h1","Description","h3","AbsoluteContainer","ScrollButton","button","BeeContainer","video","Bee","autoPlay","loop","muted","src","bee","type","LandingSection","onScroll","onClick","extractEnvKey","key","process","baseUri","blogId","apiKey","endpoint","suffix","listPostIds","a","fetch","then","response","json","getPost","postId","loadSetOfPosts","cursor","maxPosts","postIds","ids","length","slice","payload","Promise","all","map","post","id","Wrapper","Card","LeftRibbon","RightRibbon","Header","publishedDate","formattedDate","Date","day","getDay","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","finalDate","PostWrapper","Title","LeftLine","RightLine","TextWrapper","Post","published","title","dangerouslySetInnerHTML","__html","content","Section","PostsContainer","POST_OFFSET","config","InfinitePosts","props","state","posts","handleScroll","debounce","bind","fetchPostIds","fetchPosts","setState","items","this","console","log","newPosts","concat","event","height","Math","max","clientHeight","window","innerHeight","scrollHeight","scrollTop","isScrollEnd","target","scrollingElement","document","addEventListener","removeEventListener","React","Component","PostSection","forwardRef","ref","Container","Home","postSection","useRef","Fragment","smoothTime","destination","current","offsetTop","scrollBy","top","left","behavior","isDone","setInterval","pageYOffset","body","offsetHeight","clearInterval","scroll","App","ReactDOM","render","GlobalStyle","getElementById"],"mappings":"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","file":"static/js/main.f20fac2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bee.68655fb2.mp4\";","export default {\n  colors: {\n    WHITE: '#fff',\n    BLACK: '#000',\n    SUCCESS: '#0acd8e',\n    WARNING: '#ffa900',\n    DANGER: '#ec4833',\n\n    DARK: '#23212C',\n\n    GRAY_DARKER: \"#323D55\",\n    GRAY_DARK: \"#3A3637\",\n    GRAY: \"#adb5c4\",\n    GRAY_LIGHT: \"#d9dee6\",\n    GRAY_LIGHTER: \"#f6f8f9\",\n\n    PRIMARY: '#F3C622',\n    PRIMARY_LIGHT: '#FCD615',\n    PRIMARY_DARK: \"#FCB43A\",\n\n    SECONDARY: \"#992409\",\n  },\n  zIndices: {\n    NEGATIVE: -1,\n    MINIMAL: 1,\n    SECTION: 2,\n    MODAL: 500,\n    ABOVE_MODAL: 501,\n    NAVBAR: 501, // We want the navbar to appear above the modal so we get a cool overlay effect\n  }\n}\n","\nexport default {\n  app: {\n    name: 'Blog das Abelhas',\n  },\n  breakpoints: {\n    desktop: 880,\n    mobile: 450,\n  },\n  posts: {\n    /** Posts to load on each scroll end */\n    offset: 10,\n  }\n}\n","import config from 'global/config'\n\nconst { breakpoints } = config\nconst { keys, values } = Object\n\ntype Mq = {\n  desktop: string,\n  mobile: string,\n}\n\n  // @ts-ignore\nconst mediaQuery = (direction: 'min' | 'max'): Mq => values(breakpoints)\n  .reduce(\n    (prev, cur, index) => ({ ...prev, [keys(breakpoints)[index]]: `@media (${direction}-width: ${cur}px)` }),\n    {}\n  )\n\nexport const mqMax = mediaQuery('max')\nexport const mqMin = mediaQuery('min')\n","import { createGlobalStyle } from 'styled-components'\nimport { normalize } from 'polished'\nimport theme from 'global/theme'\nimport { mqMax } from 'utils/mediaQuery'\n\nconst rozha = `\n  /* latin */\n  @font-face {\n    font-family: 'Delius';\n    font-style: normal;\n    font-weight: 400;\n    font-display: swap;\n    src: local('Delius-Regular'), url(https://fonts.gstatic.com/s/delius/v9/PN_xRfK0pW_9e1rdZsg_rz7b_g.woff2) format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n  }\n\n  font-family: 'Delius';\n`\n\nexport default createGlobalStyle`\n  ${normalize()}\n\n  ::selection {\n    background: ${theme.colors.PRIMARY}; /* WebKit/Blink Browsers */\n  }\n  ::-moz-selection {\n    background: ${theme.colors.PRIMARY}; /* WebKit/Blink Browsers */\n  }\n\n  html {\n    font-size: 62.5%;\n  }\n\n  *, *::after, *::before {\n      box-sizing: border-box;\n  }\n\n  body {\n    display: block;\n    background: ${theme.colors.PRIMARY};\n    color: ${theme.colors.WHITE};\n\n    h1, h2, h3, h4, h5, button, p {\n      ${rozha};\n    }\n\n    button {\n      outline: none;\n    }\n\n\n    font-family: 'Open Sans', sans-serif;\n\n    overflow-x: hidden;\n\n    font-size: 1.6rem;\n\n    .overflowHidden {\n      overflow: hidden;\n      position: fixed;\n\n      ${mqMax.desktop} {\n        overflow: initial;\n        position: initial;\n      }\n    }\n  }\n`\n","import styled, { css } from 'styled-components'\nimport theme from 'global/theme'\nimport { mqMax } from 'utils/mediaQuery'\n\nexport const centeredAbsolute = css`\n  position: absolute;\n  top: 0;\n  height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const Hero = styled.section`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  background: ${theme.colors.WHITE};\n  height: 100vh;\n  width: 100%;\n  position: fixed;\n\n  align-items: center;\n  justify-content: center;\n\n  z-index: ${theme.zIndices.NEGATIVE};\n`\n\nexport const ContentWrapper = styled.div`\n  ${centeredAbsolute};\n\n  top: 50%;\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  background: ${theme.colors.WHITE};\n  height: 100%;\n  margin-top: 10rem;\n\n\n  border-top: 1px solid ${theme.colors.PRIMARY};\n`\n\nexport const Logo = styled.h1`\n  font-size: 5rem;\n  font-weight: 800;\n  margin: 2rem 0;\n  color: ${theme.colors.DARK};\n\n  ${mqMax.desktop} {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    text-align: center;\n\n    padding: 1rem;\n  }\n\n  ${mqMax.mobile} {\n    font-size: 3.4rem;\n    margin: 0.5rem 0;\n  }\n`\n\nexport const Description = styled.h3`\n  font-size: 2.8rem;\n  margin: 1rem 0;\n  font-weight: 200;\n  color: ${theme.colors.DARK};\n\n  ${mqMax.desktop} {\n    margin-top: 3rem;\n  }\n\n  ${mqMax.mobile} {\n    font-size: 2rem;\n  }\n`\n\nexport const AbsoluteContainer = styled.div`\n  position: fixed;\n  display:flex;\n  align-self:center;\n  justify-content: center;\n  height: 100%;\n  z-index: ${theme.zIndices.MINIMAL};\n`\n\nexport const ScrollButton = styled.button`\n  margin-top: 3rem;\n  font-size: 6rem;\n  color: ${theme.colors.GRAY};\n\n  min-width: 5rem;\n  min-height: 5rem;\n\n  border: none;\n  border-bottom: 2px solid ${theme.colors.DARK};\n  border-left: 2px solid ${theme.colors.DARK};\n  background: transparent;\n  cursor: pointer;\n\n  position: absolute;\n  bottom: 5rem;\n\n  &:hover {\n    border-bottom: 2px solid ${theme.colors.PRIMARY};\n    border-left: 2px solid ${theme.colors.PRIMARY};\n  }\n\n  transition: 0.1s ease all;\n\n  transform: rotate(-45deg);\n\n  ${mqMax.desktop} {\n    display: none;\n  }\n`\n","import styled from 'styled-components'\nimport { centeredAbsolute } from '../styled'\n\nexport const BeeContainer = styled.video`\n  display: flex;\n  position: absolute;\n  pointer-events: none;\n  z-index: -1;\n  width: 65rem;\n\n  ${centeredAbsolute};\n`\n","import React from 'react'\n// @ts-ignore\nimport bee from './bee.mp4'\nimport { BeeContainer } from './styled'\n\nconst Bee = () => (\n  <BeeContainer autoPlay loop muted>\n    <source src={bee}  type=\"video/mp4\" />\n  </BeeContainer>\n)\n\nexport default Bee\n","import React from 'react'\nimport Bee from './Bee'\nimport {\n  Hero,\n  ContentWrapper,\n  Content,\n  Logo,\n  Description,\n  AbsoluteContainer,\n  ScrollButton,\n} from './styled'\n\ntype Props = {\n  onScroll: any,\n}\n\nconst LandingSection = ({ onScroll }: Props) => (\n  <>\n    <Hero>\n      <Bee />\n      <ContentWrapper>\n        <Content>\n          <Logo>Traquinas de Vale de Cavalos</Logo>\n          <Description>Um blog muito divertido</Description>\n        </Content>\n      </ContentWrapper>\n    </Hero>\n    <AbsoluteContainer>\n      <ScrollButton onClick={onScroll} />\n    </AbsoluteContainer>\n  </>\n)\n\nexport default LandingSection\n","const prefix = 'REACT_APP_'\n\nconst extractEnvKey = (key: string): string | undefined =>\n  process.env[`${prefix}${key}`]\n\n/*\n  Ideally we shouldn't expose API keys to the client,\n  but it's a bit overkill to build a back-end service\n  for this particular functionality.\n*/\nconst baseUri = extractEnvKey('GOOGLE_BLOGGER_BASE_URI')\nconst blogId = extractEnvKey('GOOGLE_BLOGGER_BLOG_ID')\nconst apiKey = extractEnvKey('GOOGLE_BLOGGER_API_KEY')\n\nexport const endpoint = `${baseUri}${blogId}`\nexport const suffix = `key=${apiKey}`\n","import { endpoint, suffix } from 'global/blogger'\nimport { PostsResponse, Post } from './types'\n\n/** Loads all posts including their content */\nexport const listPosts = async (): Promise<PostsResponse> =>\n  await fetch(`${endpoint}/posts?${suffix}`)\n    .then(response => response.json())\n\n/** Fetches all the post ids only */\nexport const listPostIds = async (): Promise<PostsResponse> =>\n  await fetch(`${endpoint}/posts?fields=kind,items(id)&${suffix}`)\n    .then(response => response.json())\n\n/** Fetch a specific post by its id */\nexport const getPost = async (postId: string): Promise<Post> =>\n  await fetch(`${endpoint}/posts/${postId}/?${suffix}`)\n    .then(response => response.json())\n\nexport const loadSetOfPosts = async (\n  cursor: number = 0,\n  maxPosts: number = 3,\n  postIds: Array<any>,\n): Promise<Post[]> => {\n  const ids =\n    postIds &&\n    postIds.length &&\n    postIds.slice(cursor, cursor + maxPosts)\n\n  if (!ids) {\n    return []\n  }\n\n  const payload: Promise<Post[]> =\n    Promise.all(ids.map(async (post: { id: string }) =>\n      await getPost(post.id)\n    ))\n\n  return payload\n}\n","import styled from 'styled-components'\nimport theme from 'global/theme'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n  margin-top: 5rem;\n  margin-bottom: 2rem;\n`\n\nexport const Card = styled.div`\n  display: flex;\n  min-width: 5rem;\n  min-height: 3.5rem;\n\n  align-items: center;\n  padding: 0 2rem;\n  color: ${theme.colors.BLACK};\n  background: ${theme.colors.PRIMARY_LIGHT};\n`\n\nexport const LeftRibbon = styled.div`\n\twidth: 0;\n\theight: 0;\n\tborder-top: 25px solid ${theme.colors.PRIMARY_LIGHT};\n\tborder-left: 25px solid transparent;\n\tborder-bottom: 25px solid ${theme.colors.PRIMARY_LIGHT};\n`\n\nexport const RightRibbon = styled.div`\n\twidth: 0;\n\theight: 0;\n\tborder-top: 25px solid ${theme.colors.PRIMARY_LIGHT};\n\tborder-right: 25px solid transparent;\n\tborder-bottom: 25px solid ${theme.colors.PRIMARY_LIGHT};\n`\n","import React from 'react'\nimport {\n  Wrapper,\n  LeftRibbon,\n  RightRibbon,\n  Card,\n} from './styled'\n\ntype Props = {\n  publishedDate: string,\n}\n\nconst Header = ({ publishedDate }: Props) => {\n  const formattedDate = new Date(publishedDate)\n\n  const day = formattedDate.getDay()\n  const month = formattedDate.getMonth()\n  const year = formattedDate.getFullYear()\n  const hour = formattedDate.getHours()\n  const minute = formattedDate.getMinutes()\n\n  const finalDate = `${day}/${month}/${year} ${hour}:${minute}`\n\n  return (\n    <>\n      <Wrapper>\n        <LeftRibbon />\n        <Card>\n          <p>Publicado a {finalDate}</p>\n        </Card>\n        <RightRibbon />\n      </Wrapper>\n    </>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\nimport theme from 'global/theme'\nimport { mqMax } from 'utils/mediaQuery'\n\nexport const PostWrapper = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  ${mqMax.desktop} {\n    width: 100%;\n    padding: 0;\n  }\n`\n\n/** Content */\nexport const Title = styled.h1`\n  display: flex;\n  color: ${theme.colors.DARK};\n  font-size: 4rem;\n  margin: 5rem 0;\n  align-self: center;\n\n  ${mqMax.desktop} {\n    margin: 2rem 0;\n    font-size: 3.2rem;\n  }\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background: ${theme.colors.WHITE};\n  width: 100%;\n  position: relative;\n  border-bottom: 0.5rem solid lightgray;\n  padding-bottom: 5rem;\n  color: ${theme.colors.BLACK};\n\n  * {\n    img {\n      max-width: 100%;\n    }\n  }\n`\n\nexport const LeftLine = styled.div`\n  position: absolute;\n  width: 0.1rem;\n  height: 100%;\n  background: ${theme.colors.PRIMARY_LIGHT};\n\n  left: 5rem;\n  top: 0;\n\n  ${mqMax.desktop} {\n    left: 1rem;\n  }\n`\n\nexport const RightLine = styled(LeftLine)`\n  left: auto;\n  right: 5rem;\n\n  ${mqMax.desktop} {\n    left: auto;\n    right: 1rem;\n  }\n`\n\nexport const TextWrapper = styled.div`\n  margin-left: 10rem;\n  margin-right: 8rem;\n\n\n  ${mqMax.desktop} {\n    margin: 2rem;\n  }\n`\n","import React from 'react'\nimport { Post as PostType } from 'data/blogger/types'\nimport Header from './Header'\nimport {\n  PostWrapper,\n  Content,\n  Title,\n  TextWrapper,\n  LeftLine,\n  RightLine,\n} from './styled'\n\ntype Props = {\n  post: PostType,\n  index: number,\n}\n\nconst Post = ({ post, index}: Props) => (\n  <PostWrapper>\n    <Header publishedDate={post.published} />\n    <Content>\n      <Title>{post.title}</Title>\n      <TextWrapper>\n        <div dangerouslySetInnerHTML={{__html: post.content}} />\n      </TextWrapper>\n      <LeftLine />\n      <RightLine />\n    </Content>\n  </PostWrapper>\n)\n\nexport default Post;\n","import styled from 'styled-components'\nimport theme from 'global/theme'\nimport { mqMax } from 'utils/mediaQuery'\n\nexport const Section = styled.section<any>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-top: 100vh;\n  padding: 0 5rem;\n  background: ${theme.colors.PRIMARY};\n  z-index: ${theme.zIndices.SECTION};\n  width: 100%;\n\n  ${mqMax.desktop} {\n    padding: 0 1rem;\n  }\n`\n\nexport const PostsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-height: 100vh;\n  max-width: 90rem;\n\n\n  ${mqMax.desktop} {\n    width: 100%;\n  }\n`\n\nexport const MenuWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  min-height: 100vh;\n\n  ${mqMax.desktop} {\n    display: none;\n  }\n`\n","import React from 'react'\nimport { listPostIds, loadSetOfPosts } from 'data/blogger/services'\nimport { debounce } from 'throttle-debounce'\n\nimport isScrollEnd from 'utils/isScrollEnd'\n\nimport config from 'global/config'\nimport { Post as PostType } from 'data/blogger/types'\nimport Post from './Post'\nimport Menu from './Menu'\nimport { Section, PostsContainer, MenuWrapper } from './styled'\n\nconst POST_OFFSET = config.posts.offset\n\ntype PostIdPayload = {\n  items: Array<{\n    id: string,\n  }>\n}\n\nclass InfinitePosts extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      posts: [],\n      postIds: [],\n      cursor: 0,\n    }\n\n    this.handleScroll = debounce(250,this.handleScroll.bind(this));\n\n    this.fetchPostIds = this.fetchPostIds.bind(this);\n\n    this.fetchPosts = this.fetchPosts.bind(this);\n  }\n\n  fetchPostIds() {\n    listPostIds()\n      .then((payload: PostIdPayload) => this.setState({\n        postIds: payload.items,\n      }))\n      .then(() =>\n        this.fetchPosts()\n      )\n  }\n\n  fetchPosts() {\n    const { cursor, posts, postIds } = this.state\n\n    loadSetOfPosts(cursor, POST_OFFSET, postIds)\n      .then((payload: any) => {\n        console.log('payload: ', payload)\n        const newPosts = posts.concat(payload)\n        this.setState({ posts: newPosts })\n      })\n      .then(() => {\n        this.setState({ cursor: cursor + POST_OFFSET})\n      })\n  }\n\n  handleScroll(event: any) {\n    if (!isScrollEnd(event.target.scrollingElement)) {\n      return\n    }\n\n    this.fetchPosts()\n  }\n\n  componentDidMount() {\n    // @ts-ignore\n    document.addEventListener('scroll', this.handleScroll)\n\n    this.fetchPostIds()\n\n    // this.fetchPosts()\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    document.removeEventListener('scroll', this.handleScroll)\n  }\n\n  render() {\n    const { posts } = this.state\n\n    return (\n      <PostsContainer>\n        {posts.map((post: PostType, index: number) => <Post post={post} key={index} index={index} />)}\n      </PostsContainer>\n    )\n  }\n\n}\n\n\nconst PostSection = React.forwardRef((props, ref) => {\n\n  return (\n    <Section ref={ref}>\n      {/* <PostsContainer>\n        {posts.map((post: PostType, index: number) => <Post post={post} key={index} index={index} />)}\n      </PostsContainer> */}\n      <InfinitePosts />\n      {/* <MenuWrapper>\n        <Menu sectionRef={ref} />\n      </MenuWrapper> */}\n    </Section>\n  )\n})\n\n\nexport default PostSection\n","const END_OFFSET = 10\n\nexport default (event: any): boolean => {\n  const height = Math.max(event.clientHeight, window.innerHeight)\n\n  return event.scrollHeight - event.scrollTop <= height + END_OFFSET\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport LandingSection from './LandingSection'\nimport PostSection from './PostSection'\n\nimport scroll from 'utils/scroll'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow-y:hidden;\n  overflow-x:hidden;\n`\n\nconst Home = () => {\n  const postSection = React.useRef(null)\n\n  return (\n    <React.Fragment>\n      <Container>\n        <LandingSection onScroll={() => scroll(postSection)} />\n        <PostSection ref={postSection} />\n      </Container>\n    </React.Fragment>\n  )\n}\n\nexport default Home\n","export default (target: any, smoothTime: number = 100): void => {\n  const destination = target.current.offsetTop\n\n  window.scrollBy({\n    top: destination, left: 0, behavior: 'smooth',\n  })\n\n  const isDone = setInterval(() => {\n    const atBottom = window.innerHeight + window.pageYOffset >= document.body.offsetHeight - 2\n\n    if (atBottom) {\n      clearInterval(isDone)\n    }\n  }, smoothTime)\n}\n","import React from 'react'\nimport Home from 'pages/Home'\n\nconst App = () => (\n  <Home />\n);\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GlobalStyle from 'styledComponents/GlobalStyle'\nimport App from 'containers/App';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}